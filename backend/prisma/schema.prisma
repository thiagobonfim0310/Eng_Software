// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String             @id @default(uuid())
  name        String
  cpf         String             @unique
  tag         String             @unique
  createdAt   DateTime           @default(now())
  environments EnvironmentUser[]  
  checkIns CheckIn[]
}

model Environment {
  id              String             @id @default(uuid())
  name            String
  createdAt       DateTime           @default(now())
  parentId        String?           
  parent          Environment?       @relation("SubEnvironments", fields: [parentId], references: [id])
  subEnvironments Environment[]      @relation("SubEnvironments")
  users           EnvironmentUser[]  
  lock            Lock?      
  checkIns CheckIn[]        
}

model EnvironmentUser {
  userId        String
  environmentId String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  environment   Environment @relation(fields: [environmentId], references: [id], onDelete: Cascade)

  @@id([userId, environmentId])  
}

model Lock {
  id            String      @id @default(uuid())
  name          String
  createdAt     DateTime    @default(now())
  environmentId String?      @unique
  environment   Environment? @relation(fields: [environmentId], references: [id])
}

model CheckIn {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  validated_at DateTime?
  
  user User? @relation(fields: [user_id], references: [id])
  user_id String?

  environment Environment @relation(fields: [environment_id], references: [id])
  environment_id String
  @@map("check_ins")
}